name: Publish Python Package

on:
  release:
    types: [published]  # Trigger only on published releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build requests

      - name: Get release version
        id: get_version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Release version: $VERSION"

      - name: Check if version exists on PyPI
        id: check_pypi
        run: |
          PACKAGE_NAME=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['name'])")
          VERSION=${{ env.VERSION }}
          RESPONSE=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json | python3 -c "import sys,json; data=json.load(sys.stdin); print(data['releases'].get('$VERSION'))")
          if [[ "$RESPONSE" != "None" ]]; then
            echo "Version $VERSION already exists on PyPI, skipping upload."
            echo "SKIP_UPLOAD=true" >> $GITHUB_ENV
          else
            echo "SKIP_UPLOAD=false" >> $GITHUB_ENV
          fi

      - name: Build distributions
        run: python -m build

      - name: Publish to PyPI
        if: env.SKIP_UPLOAD == 'false'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      - name: Skip notice
        if: env.SKIP_UPLOAD == 'true'
        run: echo "Upload skipped because version already exists on PyPI."
